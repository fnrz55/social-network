{"version":3,"file":"static/js/454.f4d5a9fa.chunk.js","mappings":"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","sources":["webpack://m1/./src/components/Content/Content.module.css?61ac","webpack://m1/./src/components/Content/MyPosts/MyPosts.module.css?9455","webpack://m1/./src/components/Content/MyPosts/Post/Post.module.css?b7c2","img/Profile/thumbs-up.svg","img/Profile/Vector.svg","components/Content/MyPosts/Post/Post.jsx","components/Content/MyPosts/MyPosts.jsx","components/Content/MyPosts/MyPostsContainer.jsx","webpack://m1/./src/components/Content/ProfileInfo/ProfileInfo.module.css?06e5","webpack://m1/./src/components/Content/ProfileInfo/Friend/Friend.module.css?593e","components/Content/ProfileInfo/Friend/Friend.jsx","components/Content/ProfileInfo/ProlileStatusWithHooks.jsx","components/Content/ProfileInfo/ProfileForm.jsx","components/Content/ProfileInfo/ProfileInfo.jsx","components/Content/ProfileInfo/ProfileInfoContainer.jsx","components/Content/Content.jsx","components/Content/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Content_profile__DLh5-\",\"background\":\"Content_background__sNL8j\",\"avatarPic\":\"Content_avatarPic__GQa4P\",\"container\":\"Content_container__BIsih\",\"info\":\"Content_info__EqM10\",\"name\":\"Content_name__WOnS3\",\"descriptipon\":\"Content_descriptipon__d1TVk\"};","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__Y+IAi\",\"input\":\"MyPosts_input__UULO8\",\"newPost\":\"MyPosts_newPost__iH-k+\",\"sort\":\"MyPosts_sort__qg0gC\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__DXU-9\",\"container\":\"Post_container__d4sLv\",\"avatar\":\"Post_avatar__7INMX\",\"name\":\"Post_name__8snA8\",\"text\":\"Post_text__cIk+q\",\"feedback\":\"Post_feedback__AfHnW\",\"likes\":\"Post_likes__5D6hy\",\"comment\":\"Post_comment__6c3Qx\"};","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgThumbsUp(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_2_797)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.66665 14.6667H2.66665C2.31302 14.6667 1.97389 14.5262 1.72384 14.2762C1.47379 14.0261 1.33331 13.687 1.33331 13.3333V8.66668C1.33331 8.31306 1.47379 7.97392 1.72384 7.72387C1.97389 7.47382 2.31302 7.33334 2.66665 7.33334H4.66665M9.33331 6.00001V3.33334C9.33331 2.80291 9.1226 2.2942 8.74753 1.91913C8.37245 1.54406 7.86375 1.33334 7.33331 1.33334L4.66665 7.33334V14.6667H12.1866C12.5082 14.6703 12.8202 14.5576 13.0653 14.3493C13.3103 14.1411 13.4718 13.8513 13.52 13.5333L14.44 7.53334C14.469 7.34225 14.4561 7.14713 14.4022 6.96151C14.3483 6.77589 14.2547 6.60421 14.1279 6.45835C14.0011 6.3125 13.844 6.19596 13.6677 6.11682C13.4914 6.03768 13.2999 5.99782 13.1066 6.00001H9.33331Z\",\n    stroke: \"#0275B1\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_2_797\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 16,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgThumbsUp);\nexport default __webpack_public_path__ + \"static/media/thumbs-up.ad79caddb88f6f79135ee2309d0db4d1.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgVector(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 6.66666C13.0023 7.54657 12.7967 8.41458 12.4 9.19999C11.9296 10.1412 11.2065 10.9328 10.3116 11.4862C9.41677 12.0396 8.3855 12.3329 7.33333 12.3333C6.45342 12.3356 5.58541 12.13 4.8 11.7333L1 13L2.26667 9.19999C1.86995 8.41458 1.66437 7.54657 1.66667 6.66666C1.66707 5.61449 1.96041 4.58322 2.51381 3.68836C3.06722 2.79349 3.85884 2.07037 4.8 1.59999C5.58541 1.20328 6.45342 0.997694 7.33333 0.999988H7.66667C9.05623 1.07665 10.3687 1.66316 11.3528 2.64723C12.3368 3.63129 12.9233 4.94376 13 6.33332V6.66666Z\",\n    stroke: \"#0275B1\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVector);\nexport default __webpack_public_path__ + \"static/media/Vector.63483f28a39f4495f5e5b11bb34104f8.svg\";\nexport { ForwardRef as ReactComponent };","import c from './Post.module.css'\r\nimport l from '../../../../img/Profile/thumbs-up.svg'\r\nimport comm from '../../../../img/Profile/Vector.svg'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={c.item}>\r\n            <div className={c.container}>\r\n            <div className={c.avatar}>\r\n                <img src=\"https://i.pinimg.com/736x/4f/1f/ab/4f1fabcce701473344138eb41fce144d.jpg\" alt=\"\" />\r\n            </div>\r\n            <div className={c.name}>\r\n                Aristarh P.\r\n            </div>\r\n            </div>\r\n            <div className={c.text}>\r\n            <p>{props.text}</p>\r\n            </div>\r\n            <div className={c.feedback}>\r\n                <div className={c.likes}>\r\n                <button>\r\n                    <img src={l} alt=\"\" />\r\n                    <span>{props.likesCount}</span>\r\n                </button>\r\n                \r\n                </div>\r\n                <div className={c.comment}>\r\n                    <button>\r\n                        <img src={comm} alt=\"\" />\r\n                        <span>0</span>\r\n                    </button>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport c from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport s from '../../../img/Profile/send.svg'\r\nimport { useForm } from \"react-hook-form\"\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n\r\n    let postsElements = props.posts\r\n        .map(post => { return <Post text={post.text} likesCount={post.likesCount} /> })\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let addPost = (text) => {\r\n        props.addPost(text)\r\n    }\r\n    let postOnChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.postOnChange(text)\r\n\r\n    }\r\n    return (\r\n        <div className={c.myPosts}>\r\n            <div className={c.newPost}>\r\n                <p>NEW POST</p>\r\n                <PosrForm onSubmit={props.addPost} />\r\n            </div>\r\n            <div className={c.sort}>\r\n                <div> SORT BY TRENDING</div>\r\n            </div>\r\n            {postsElements}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst PosrForm = (props) => {\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors, isValid },\r\n    } = useForm()\r\n\r\n    const onSubmit = (data) => {\r\n        props.onSubmit(data.post)\r\n        reset();\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={c.input}>\r\n                    <input {...register('post', { required: true })} autoComplete=\"off\" placeholder='Whats new?' />\r\n                </div>\r\n                <div>\r\n                    {isValid && <button>\r\n                        <img src={s} alt=\"\" />\r\n                    </button>}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport { addPost} from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps=(props)=>{\r\n    return{\r\n        posts: props.profilePage.posts,\r\n        newPostsText:props.profilePage.newPostsText,\r\n        profile:props.profilePage.profile,  \r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer=connect(mapStateToProps,{\r\n    addPost,\r\n})(MyPosts)\r\n\r\n\r\nexport default MyPostsContainer ","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"ProfileInfo_profile__HFwGe\",\"backgroundCont\":\"ProfileInfo_backgroundCont__EG7k5\",\"background\":\"ProfileInfo_background__4UpvX\",\"avatarHoverCont\":\"ProfileInfo_avatarHoverCont__Mckas\",\"avatarPic\":\"ProfileInfo_avatarPic__FG+9h\",\"container\":\"ProfileInfo_container__GevTD\",\"name\":\"ProfileInfo_name__aeTQW\",\"descriptipon\":\"ProfileInfo_descriptipon__5fTXa\",\"friendsBlock\":\"ProfileInfo_friendsBlock__zcB9E\",\"friends\":\"ProfileInfo_friends__8pppx\",\"upload\":\"ProfileInfo_upload__TfhMB\",\"edit\":\"ProfileInfo_edit__zxq1f\",\"descriptionWrapper\":\"ProfileInfo_descriptionWrapper__AZnJA\"};","// extracted by mini-css-extract-plugin\nexport default {\"friend\":\"Friend_friend__XFDMe\",\"name\":\"Friend_name__M4omF\"};","import { Link, NavLink } from 'react-router-dom'\r\nimport c from './Friend.module.css'\r\n\r\nconst Friend = (props) => {\r\n  return (\r\n    <div className={c.friend}>\r\n      <Link target={'_blank'} to={`/profile/${props.id}`}>\r\n      <img src={props.avatar?props.avatar:'https://i.pinimg.com/564x/06/a0/59/06a059e6ef315c59c3eb07dfb54e27d2.jpg'} alt=\"\" />\r\n      <div className={c.name}>\r\n        {props.name}\r\n      </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friend","import React, { useState } from \"react\";\r\nimport c from './ProfileInfo.module.css'\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks=(props)=>  {\r\n    let [editMode,setEditMode]=useState(false)\r\n    let [userStatus,setStatus]=useState(props.status)\r\n    \r\n    let activateEditMode=()=>{\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode=()=>{\r\n        setEditMode(false)\r\n        props.updateStatus(userStatus)\r\n    }\r\n\r\n    let onStatusChange=(e)=>{\r\n            setStatus(e.currentTarget.value)\r\n    }\r\n    \r\n        return (\r\n            <div>\r\n                {!editMode&&<div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status?props.status:\"Write something about urself...\"}</span>\r\n                </div>\r\n                }\r\n                {editMode&&<div>\r\n                    <input  autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode} value={userStatus}  type=\"text\"  />\r\n                </div>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n\r\nexport default ProfileStatusWithHooks","import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\n\r\n\r\n\r\nconst ProfileForm = ({handleRedactProfile,profile,saveProfile,...props}) => {\r\n    \r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors, isValid },\r\n    } = useForm({\r\n        mode: \"onBlur\",\r\n        defaultValues: {\r\n            fullName: profile.fullName,\r\n            aboutMe:profile.aboutMe,\r\n            lookingForAJob:profile.lookingForAJob,\r\n            lookingForAJobDescription:profile.lookingForAJobDescription,\r\n            'contacts.vk':profile.contacts.vk,\r\n            'contacts.instagram':profile.contacts.instagram,\r\n          }\r\n    })\r\n    \r\n    const onSubmit= (data)=>{\r\n        saveProfile(data).then(()=>{\r\n            handleRedactProfile()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit(onSubmit)}>\r\n            <p>Your name:</p>\r\n            <input type=\"text\" {...register('fullName',{required:\"Enter ur name\"})} />\r\n            <p>Your self description:</p>\r\n            <input type=\"text\"{ ...register('aboutMe')} />\r\n            <p>Your work description:</p>\r\n            <input type=\"checkbox\"  {...register('lookingForAJob') }  />\r\n             <input type=\"text\" {...register('lookingForAJobDescription')} />\r\n            <p>Your vk link:</p>\r\n            <input type=\"text\"{ ...register('contacts.vk',{pattern: {\r\n            value: /^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$/,\r\n            message: 'Invalid URL'\r\n          }})} />\r\n            <p>Your inst link:</p>\r\n            <input type=\"text\" { ...register('contacts.instagram',{pattern: {\r\n            value: /^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$/,\r\n            message: 'Invalid URL'\r\n          }})} />\r\n            <div className='error'>\r\n            {props.errorMessage&&<p>{props.errorMessage}</p>}\r\n            </div>\r\n            <input type=\"submit\"/>\r\n        </form>\r\n  )\r\n}\r\n\r\nexport default ProfileForm","import c from './ProfileInfo.module.css'\r\nimport Friend from './Friend/Friend';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProlileStatusWithHooks';\r\nimport { useState } from 'react';\r\nimport ProfileForm from './ProfileForm';\r\nimport set from '../../../img/Profile/settings-icon-2048x2046-cw28eevx.png'\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [showChangeMenu, setShowChangeMenu] = useState(false)\r\n\r\n    const handleRedactProfile = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    let friendsElements = props.friends\r\n        .map(friend => { return <Friend key={friend.id} avatar={friend.photos.small} id={friend.id} name={friend.name} /> })\r\n\r\n    if (!props.userProfile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onProfilePicChange = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <div className={c.profile} >\r\n            <div className={c.backgroundCont}>\r\n                <div className={c.background}>\r\n                    <img src=\"https://i.pinimg.com/564x/15/8a/1b/158a1b79e4f7559b48067da9369c38cb.jpg\"></img>\r\n                </div>\r\n                <div className={c.avatarHoverCont} onMouseEnter={() => setShowChangeMenu(true)} onMouseLeave={() => setShowChangeMenu(false)}>\r\n                <div className={c.avatarPic} >\r\n                    <img src={props.userProfile.photos.large != null ? props.userProfile.photos.large : \"https://i.pinimg.com/564x/06/a0/59/06a059e6ef315c59c3eb07dfb54e27d2.jpg\"}/>      \r\n                </div>\r\n                {props.owner && showChangeMenu && editMode && <div className={c.upload} onMouseEnter={() => setShowChangeMenu(true)} onMouseLeave={() => setShowChangeMenu(false)}><label htmlFor=\"file\">Uoload new photo</label> <input id='file' type=\"file\" onChange={onProfilePicChange} /></div>}\r\n                </div>\r\n                \r\n            </div>\r\n            <div className={c.container}>\r\n\r\n                <div className={c.info}>\r\n                    {!editMode&& <div className={c.name}>\r\n                        {props.userProfile.fullName}\r\n                    </div>}\r\n                    <div className={c.descriptipon}>\r\n                        {\r\n                            editMode ? <ProfileForm\r\n                                profile={props.userProfile} saveProfile={props.saveProfile} handleRedactProfile={handleRedactProfile}  errorMessage={props.errorMessage}/>\r\n                                : <ProfileDescription userProfile={props.userProfile} isOwner={props.owner}\r\n                                    handleRedactProfile={handleRedactProfile} status={props.status} updateStatus={props.updateStatus} />\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div on className={c.friendsBlock}>\r\n                <h3>MY FRIENDS </h3>\r\n                <div className={c.friends}>\r\n                    {friendsElements.slice(0, 6)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ProfileDescription = ({ userProfile, updateStatus,\r\n    status, isOwner,\r\n    handleRedactProfile }) => {\r\n    return (<div className={c.descriptionWrapper}>\r\n        {isOwner && <button className={c.edit} onClick={handleRedactProfile}><img src={set} alt=\"\" /></button>}\r\n        {status && <ProfileStatusWithHooks updateStatus={updateStatus} status={status} />}\r\n        {userProfile.aboutMe && <p><span>Description: </span> {userProfile.aboutMe}</p>}\r\n        {userProfile.contacts.vk && <p><span>ВК: </span> {userProfile.contacts.vk}</p>}\r\n        {userProfile.contacts.instagram && <p><span>instagram: </span> {userProfile.contacts.instagram}</p>}\r\n        {userProfile.lookingForAJob && <p><span>Просьбы о работе: </span> {userProfile.lookingForAJobDescription}</p>}\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo","import ProfileInfo from './ProfileInfo';\r\nimport { connect } from 'react-redux';\r\nimport { updateStatus, savePhoto, saveProfile } from './../../../redux/profileReducer';\r\nimport { getFriends } from './../../../redux/usersSelectors';\r\n\r\nlet mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    friends: getFriends(state),\r\n    userProfile: state.profilePage.userProfile,\r\n    status: state.profilePage.status,\r\n    errorMessage:state.profilePage.errorMessage,\r\n  }\r\n}\r\n\r\nconst ProfileInfoContainer = connect(mapStateToProps, { updateStatus,savePhoto,saveProfile })(ProfileInfo)\r\n\r\nexport default ProfileInfoContainer","import c from './Content.module.css'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfoContainer from './ProfileInfo/ProfileInfoContainer';\r\n\r\nconst Content = (props) => {\r\n    \r\n    return (\r\n        <div className={c.profile} >\r\n            <MyPostsContainer  />\r\n            <ProfileInfoContainer owner={props.owner} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Content","import React from \"react\";\r\nimport Content from './Content';\r\nimport {  getProfile, getUsersStatus, updateStatus } from './../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAurhRedirect } from '../../HOC/withAurhRedirect';\r\nimport { compose } from 'redux';\r\nimport { getUsers } from \"../../redux/usersReducer\";\r\nimport { getUserAuth } from '../../redux/authReducer';\r\nimport { withRouter } from './../../HOC/withRouter';\r\nimport { getFriends } from './../../redux/usersSelectors';\r\n\r\nclass ProfileContainerAPI extends React.Component {\r\n\r\n    refreshProfile(){\r\n        let userId = this.props.router.params.userId\r\n        if (!userId) {\r\n            userId = this.props.id\r\n            if (!userId) {\r\n                userId = this.props.router.navigate('/login')\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getUsersStatus(userId)\r\n        this.props.getUsers(1,100)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.router.params.userId!=prevProps.router.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Content {...this.props} owner={!this.props.router.params.userId} profile={this.props.profile} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.userProfile,\r\n    friends: getFriends(state),\r\n    status: state.profilePage.status,\r\n    id: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getUsers,getUsersStatus, updateStatus, getUserAuth }),\r\n    withAurhRedirect,\r\n    withRouter,\r\n)(ProfileContainerAPI)"],"names":["props","_jsxs","className","c","children","_jsx","src","alt","text","l","likesCount","comm","PosrForm","register","handleSubmit","reset","formState","errors","isValid","useForm","onSubmit","data","post","required","autoComplete","placeholder","s","postsElements","posts","map","Post","addPost","connect","profilePage","newPostsText","profile","MyPosts","Link","target","to","concat","id","avatar","name","editMode","setEditMode","useState","userStatus","setStatus","status","onDoubleClick","activateEditMode","autoFocus","onChange","e","currentTarget","value","onBlur","deactivateEditMode","updateStatus","type","_ref","handleRedactProfile","saveProfile","mode","defaultValues","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","vk","instagram","then","pattern","message","errorMessage","ProfileDescription","userProfile","isOwner","descriptionWrapper","edit","onClick","set","ProfileStatusWithHooks","showChangeMenu","setShowChangeMenu","friendsElements","friends","friend","Friend","photos","small","Preloader","backgroundCont","background","avatarHoverCont","onMouseEnter","onMouseLeave","avatarPic","large","owner","upload","htmlFor","files","length","savePhoto","container","info","descriptipon","ProfileForm","on","friendsBlock","slice","state","getFriends","ProfileInfo","MyPostsContainer","ProfileInfoContainer","ProfileContainerAPI","React","refreshProfile","userId","this","router","params","navigate","getProfile","getUsersStatus","getUsers","componentDidMount","componentDidUpdate","prevProps","render","Content","compose","auth","isAuth","getUserAuth","withAurhRedirect","withRouter"],"sourceRoot":""}